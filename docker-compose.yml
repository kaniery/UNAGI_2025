version: '3.8'

services:
  frontend:
    build:
      context: ./frontend  
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"  
    volumes:
      - ./frontend:/app  
      - /app/node_modules 
    depends_on:
      backend:
        condition: service_started
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8080 
  
  backend:
    build:
      context: ./backend  
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"  
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: my_app_db
      DB_PORT: 5432

  db:
    image: postgres:16-alpine 
    ports:
      - "5432:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data 
      - ./initdb:/docker-entrypoint-initdb.d 
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: my_app_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"] 
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: